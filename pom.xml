<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.kevin</groupId>
    <artifactId>package-util</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>package-util</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>5.5.1.201910021850-r</version>
        </dependency>

        &lt;!&ndash; https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit.archive &ndash;&gt;
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit.archive</artifactId>
            <version>5.5.1.201910021850-r</version>
        </dependency>-->

        <!-- https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit -->
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>3.5.1.201410131835-r</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.lingala.zip4j/zip4j -->
        <dependency>
            <groupId>net.lingala.zip4j</groupId>
            <artifactId>zip4j</artifactId>
            <version>2.5.0</version>
        </dependency>


    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                    </configuration>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <mainClass>demo.PackageGUI</mainClass>
                                <!--是否要把第三方jar放到manifest的classpath中-->
                                <addClasspath>true</addClasspath>
                                <!--
                                生成的manifest中classpath的前缀，
                                因为要把第三方jar放到lib目录下，
                                所以classpath的前缀是lib/
                                -->
                                <classpathPrefix>lib/</classpathPrefix>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <configuration>
                        <!--<archive>
                            <manifest>
                                <mainClass>org.kevin.PDFUtil</mainClass>
                                &lt;!&ndash;是否要把第三方jar放到manifest的classpath中&ndash;&gt;
                                <addClasspath>true</addClasspath>
                                &lt;!&ndash;
                                生成的manifest中classpath的前缀，
                                因为要把第三方jar放到lib目录下，
                                所以classpath的前缀是lib/
                                &ndash;&gt;
                                <classpathPrefix>lib/</classpathPrefix>
                            </manifest>
                        </archive>-->
                        <descriptors>
                            <descriptor>src/assembly/release.xml</descriptor>
                        </descriptors>
                    </configuration>
                    <executions>
                        <execution>
                            <!-- mvn assembly:single -->
                            <id>make-assembly</id> <!-- this is used for inheritance merges -->
                            <phase>package</phase> <!-- bind to the packaging phase -->
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <finalName>packageUtil</finalName>
        <resources>
            <resource>
                <directory>target/classess</directory>
                <includes>
                    <include>**/*</include>
                    <include>**/*/*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/java/demo/</directory>
                <includes>
                    <include>GUI.form</include>
                </includes>
                <targetPath>demo/</targetPath>
            </resource>
            <!--<resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                    <include>**/*/*</include>
                </includes>
            </resource>-->
        </resources>
    </build>
</project>
